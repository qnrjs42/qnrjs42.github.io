{"componentChunkName":"component---src-templates-post-template-tsx","path":"/react/parent-call-child-func-with-hooks","result":{"data":{"mdx":{"id":"60a0226a-9b05-5eca-95c4-e85a9b6b2f92","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-09-19\",\n  \"title\": \"[React] 부모 컴포넌트에서 자식 컴포넌트 함수 호출과 데이터 가져오기 with hooks(useRef)\",\n  \"categories\": [\"React\", \"hooks\"],\n  \"summary\": \"useRef, forwardRef, useImperativeHandle\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"[20-09-19 \\uC5C5\\uB370\\uC774\\uD2B8]\"), mdx(\"p\", null, \"\\uC790\\uC2DD \\uD568\\uC218, \\uB370\\uC774\\uD130 -> \\uBD80\\uBAA8\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"// ParentComponent.js\\n\\nimport React, { useRef, useCallback } from 'react';\\nimport ChildComponent from './ChildComponent';\\n\\nconst ParentComponent = () => {\\n  const childRef = useRef();\\n\\n  const callChildFunc = useCallback(() => {\\n    console.log(childRef.current.getAlert()); // \\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uD568\\uC218 \\uD638\\uCD9C\\n    console.log(childRef.current.getRowId()); // \\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8 \\uB370\\uC774\\uD130 \\uAC00\\uC838\\uC624\\uAE30\\n  });\\n\\n  return (\\n    <>\\n      <ChildComponent ref={childRef} />\\n      <button onClick={callChildFunc}></button>\\n    </>\\n  );\\n};\\n\\nexport default ParentComponent;\"), \"\\n        \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"// ChildComponent.js\\n\\nimport React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\\n\\nconst ChildComponent = forwardRef((props, ref) => {\\n  const [RowId, setRowId] = useState({});\\n\\n  useEffect(() => {\\n    setRowId({ id: 5 });\\n  }, [RowId]);\\n\\n  useImperativeHandle(ref, () => ({\\n    getRowId: () => RowId, // \\uB370\\uC774\\uD130 \\uBCF4\\uB0B4\\uAE30\\n    getAlert() {\\n      // \\uD568\\uC218 \\uBCF4\\uB0B4\\uAE30\\n      alert('getAlert from Child');\\n    },\\n  }));\\n\\n  return <h1>Hi</h1>;\\n});\\n\\nexport default ChildComponent;\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"react/parent-call-child-func-with-hooks","frontmatter":{"title":"[React] 부모 컴포넌트에서 자식 컴포넌트 함수 호출과 데이터 가져오기 with hooks(useRef)","summary":"useRef, forwardRef, useImperativeHandle","date":"2020-09-19","categories":["React","hooks"]}},"file":{"publicURL":"/static/278efc06a08028148932e21e3890c27b/profile-image.jpg"}},"pageContext":{"slug":"react/parent-call-child-func-with-hooks"}},"staticQueryHashes":[]}
{"componentChunkName":"component---src-templates-post-template-tsx","path":"/react/child-call-parent-func-with-props","result":{"data":{"mdx":{"id":"16955437-4142-539a-b79c-b5766f13927b","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-09-01\",\n  \"title\": \"[React] 자식 컴포넌트에서 부모 컴포넌트 함수 호출 with props\",\n  \"categories\": [\"React\"],\n  \"summary\": \"자식 컴포넌트 - 부모 컴포넌트 데이터 전달\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uC790\\uC2DD \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0\\uC11C \\uBD80\\uBAA8 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC758 \\uD568\\uC218 \\uD638\\uCD9C \\uBC29\\uBC95\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"// ParentComponent.js\\n\\nimport React, { useState, useCallback } from \\\"react\\\";\\nimport ChildComponent from './ChildComponent';\\n\\nconst ParentComponent = () => {\\n  const [CreateModal, setCreateModal] = useState(false); // \\uBAA8\\uB2EC \\uC0DD\\uC131 \\uC720\\uBB34\\n\\n  // \\uBAA8\\uB2EC On\\n  const onModalDisplay = useCallback(() => {\\n    setCreateModal(true);\\n  });\\n\\n  return (\\n    <>\\n      // props\\uB85C \\uBA54\\uC18C\\uB4DC \\uC804\\uB2EC | [\\uC804\\uB2EC\\uD560 props \\uC774\\uB984]={[\\uC804\\uB2EC\\uD560 \\uBA54\\uC18C\\uB4DC]}\\n      <ChildComponent\\n          onModalDisplay={onModalDisplay}\\n      />\\n    </>\\n  )\\n};\\n\\nexport default ParentComponent;\"), \"\\n        \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"// ChildComponent.js\\n\\nimport React from 'react';\\n\\n// \\uBD80\\uBAA8 \\uCEF4\\uD3EC\\uB10C\\uD2B8\\uC5D0\\uC11C \\uC804\\uB2EC\\uD55C props \\uC774\\uB984\\uC73C\\uB85C \\uBC1B\\uC74C\\nconst ChildComponent = ({ onModalDisplay }) => {\\n  return (\\n    <>\\n      <Button onClick={onModalDisplay}>\\uBC84\\uD2BC \\uD074\\uB9AD \\uC2DC \\uBAA8\\uB2EC On \\uBAA8\\uB2EC \\uC0DD\\uC131</Button>\\n    </>\\n  );\\n};\\n\\nexport default ChildComponent;\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"react/child-call-parent-func-with-props","frontmatter":{"title":"[React] 자식 컴포넌트에서 부모 컴포넌트 함수 호출 with props","summary":"자식 컴포넌트 - 부모 컴포넌트 데이터 전달","date":"2020-09-01","categories":["React"]}},"file":{"publicURL":"/static/278efc06a08028148932e21e3890c27b/profile-image.jpg"}},"pageContext":{"slug":"react/child-call-parent-func-with-props"}},"staticQueryHashes":[]}
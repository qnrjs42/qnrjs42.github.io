{"componentChunkName":"component---src-templates-post-template-tsx","path":"/react/typescript-useinput-hooks","result":{"data":{"mdx":{"id":"10c483dd-3ea6-598d-acdd-03aa00b9ec93","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-10-06\",\n  \"title\": \"[React] Typescript useInput hooks\",\n  \"categories\": [\"React\", \"Typescript\", \"hooks\"],\n  \"summary\": \"ChangeEvent<HTMLInputElement>, as [string, onChangeType, typeof setValue]\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"typescript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"// hooks/useInput.ts\\n\\nimport { useState, useCallback, ChangeEvent } from 'react';\\n\\ntype onChangeType = (e: ChangeEvent<HTMLInputElement>) => void;\\n\\nconst useInput = (initValue = '') => {\\n  const [value, setValue] = useState(initValue);\\n\\n  const handler = useCallback((e) => {\\n    setValue(e.target.value);\\n  }, []);\\n\\n  return [value, handler, setValue] as [string, onChangeType, typeof setValue];\\n};\\n\\nexport default useInput;\"), \"\\n        \"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"typescript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"// pages/login.tsx\\n\\nimport useInput from '../hooks/useInput';\\n\\nconst logIn = () => {\\n  const [Email, onChangeEmail, setEmail] = useInput('');\\n\\n  return (\\n    <Input\\n      name='email'\\n      id='email'\\n      size='large'\\n      placeholder='\\uC774\\uBA54\\uC77C'\\n      type='id'\\n      value={Email}\\n      onChange={onChangeEmail}\\n    />\\n  );\\n};\\nexport default logIn;\"), \"\\n        \"), mdx(\"br\", null), \"\\uCC38\\uACE0 Link: [Stackoverflow Go][link]\");\n}\n;\nMDXContent.isMDXComponent = true;","slug":"react/typescript-useinput-hooks","frontmatter":{"title":"[React] Typescript useInput hooks","summary":"ChangeEvent<HTMLInputElement>, as [string, onChangeType, typeof setValue]","date":"2020-10-06","categories":["React","Typescript","hooks"]}},"file":{"publicURL":"/static/278efc06a08028148932e21e3890c27b/profile-image.jpg"}},"pageContext":{"slug":"react/typescript-useinput-hooks"}},"staticQueryHashes":[]}
{"componentChunkName":"component---src-templates-post-template-tsx","path":"/react/styled-components-inner-tag","result":{"data":{"mdx":{"id":"3f471f65-51fd-548c-9ecc-b824efd0f4c6","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-09-05\",\n  \"title\": \"[React] styled-components 태그 안에 태그 적용하는 방법\",\n  \"categories\": [\"React\", \"antd\", \"styled-components\"],\n  \"summary\": \"styled(Button) span{ }\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uBC84\\uD2BC \\uC548\\uC5D0 span \\uD0DC\\uADF8\\uB85C \\uAC10\\uC2F8\\uC9C4 \\uD14D\\uC2A4\\uD2B8\\uB97C \\uC0C9\\uC0C1 \\uC918\\uC57C\\uD560 \\uB54C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\"), mdx(\"p\", null, \"span \\uD0DC\\uADF8\\uB85C \\uC2A4\\uD0C0\\uC77C\\uC744 \\uC801\\uC6A9\\uD558\\uB294 \\uBC29\\uBC95\\uB3C4 \\uC788\\uC9C0\\uB9CC \\uD0DC\\uADF8\\uC548\\uC5D0 \\uD0DC\\uADF8\\uB97C \\uC801\\uC6A9\\uD560 \\uD544\\uC694\\uAC00 \\uC788\\uC744 \\uB54C \\uC0AC\\uC6A9\\uD55C\\uB2E4.\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"import React from 'react';\\nimport { Button } from 'antd';\\nimport styled from 'styled-components';\\n\\nconst ButtonWrapper = styled(Button)`\\n  // \\uAE30\\uBCF8 \\uBC30\\uACBD \\uC0C9\\n  background-color: red;\\n\\n  // \\uB9C8\\uC6B0\\uC2A4 \\uC62C\\uB77C\\uAC14\\uC744 \\uB54C\\n  &:hover: {\\n    background-color: blue;\\n  }\\n\\n  // Button \\uC548\\uC5D0 span\\n  span {\\n    color: green;\\n\\n    // Button \\uC548\\uC5D0 span \\uC548\\uC5D0 pre\\n    pre {\\n      color: yellow;\\n    }\\n  }\\n`;\\n\\nconst HomeLayout = () => {\\n  return (\\n    <>\\n      /* \\uC2E4\\uC81C \\uCF54\\uB4DC */\\n      <ButtonWrapper>\\uC81C\\uCD9C\\uD558\\uAE30</ButtonWrapper>\\n      /* \\uD06C\\uB86C \\uAC1C\\uBC1C\\uC790 \\uB3C4\\uAD6C\\uB85C \\uBD24\\uC744 \\uB54C \\uAD6C\\uC870\\n      <ButtonWrapper>\\n        <span>\\uC81C\\uCD9C\\uD558\\uAE30</span>\\n      </ButtonWrapper>\\n      */ /* \\uD0DC\\uADF8 \\uC548\\uC5D0 \\uD0DC\\uADF8 \\uC548\\uC5D0 \\uD0DC\\uADF8 */\\n      <ButtonWrapper>\\n        <span>\\n          Tag1\\n          <pre>Tag2</pre>\\n        </span>\\n      </ButtonWrapper>\\n      /* \\uD06C\\uB86C \\uAC1C\\uBC1C\\uC790 \\uB3C4\\uAD6C\\uB85C \\uBD24\\uC744 \\uB54C \\uAD6C\\uC870\\n      <ButtonWrapper>\\n        <span>\\n          Tag1\\n          <pre>Tag2</pre>\\n        </span>\\n      </ButtonWrapper>\\n    </>\\n  );\\n};\\n\\nexport default HomeLayout;\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"react/styled-components-inner-tag","frontmatter":{"title":"[React] styled-components 태그 안에 태그 적용하는 방법","summary":"styled(Button) span{ }","date":"2020-09-05","categories":["React","antd","styled-components"]}},"file":{"publicURL":"/static/278efc06a08028148932e21e3890c27b/profile-image.jpg"}},"pageContext":{"slug":"react/styled-components-inner-tag"}},"staticQueryHashes":[]}
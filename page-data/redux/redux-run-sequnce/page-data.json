{"componentChunkName":"component---src-templates-post-template-tsx","path":"/redux/redux-run-sequnce","result":{"data":{"mdx":{"id":"c060cdb2-d54c-586f-9743-927c307b8a59","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-09-17\",\n  \"title\": \"[Redux] Redux-Saga 동작 순서\",\n  \"categories\": [\"Redux\", \"redux-saga\"],\n  \"summary\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"components/LoginForm.js\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"dispatch(loginRequestAction(data));\"), \"\\n        \"), mdx(\"h2\", null, \"reducers/users.js\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"export const loginRequestAction = (data) => {\\n  return {\\n    type: 'LOG_IN_REQUEST',\\n    data,\\n  };\\n};\"), \"\\n        \"), mdx(\"h2\", null, \"reducer/users.js\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"case \\\"LOG_IN_REQUEST\\\":\\nreturn {\\n  ...state,\\n  isLoggingIn: true,\\n};\"), \"\\n        \"), mdx(\"h2\", null, \"sagas/user.js\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"function* watchLogIn() {\\n  yield takeLatest('LOG_IN_REQUEST', logIn);\\n}\\nexport default function* userSaga() {\\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\\n}\"), \"\\n        \"), mdx(\"h2\", null, \"sagas/user.js\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"function* logIn(action) {\\n  yield put({\\n    type: 'LOG_IN_SUCCESS',\\n    data: action.data,\\n  });\\n}\"), \"\\n        \"), mdx(\"h2\", null, \"reducers/user.js\"), mdx(\"deckgo-highlight-code\", {\n    \"language\": \"javascript\"\n  }, \"\\n          \", mdx(\"code\", {\n    parentName: \"deckgo-highlight-code\",\n    \"slot\": \"code\"\n  }, \"case \\\"LOG_IN_SUCCESS\\\":\\nreturn {\\n  ...state,\\n  isLoggingIn: false,\\n  isLoggedIn: true,\\n  me: { ...action.data, nickname: \\\"zerocho\\\" },\\n};\"), \"\\n        \"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"redux/redux-run-sequnce","frontmatter":{"title":"[Redux] Redux-Saga 동작 순서","summary":"","date":"2020-09-17","categories":["Redux","redux-saga"]}},"file":{"publicURL":"/static/278efc06a08028148932e21e3890c27b/profile-image.jpg"}},"pageContext":{"slug":"redux/redux-run-sequnce"}},"staticQueryHashes":[]}